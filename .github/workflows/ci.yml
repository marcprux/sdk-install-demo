name: sdk-install-demo ci
on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:
jobs:
  install-sdk:
    strategy:
      matrix:
        include:
          - name: 'macOS 26'
            os: 'macos-26'
            ANDROID_API: 28
            ANDROID_ARCH: 'arm64-v8a'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'macOS 15'
            os: 'macos-15'
            ANDROID_API: 28
            ANDROID_ARCH: 'arm64-v8a'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'macOS 14'
            os: 'macos-14'
            ANDROID_API: 28
            ANDROID_ARCH: 'arm64-v8a'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'macOS 13'
            os: 'macos-13'
            ANDROID_API: 28
            ANDROID_ARCH: 'x86_64'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'Ubuntu Latest'
            os: 'ubuntu-latest'
            ANDROID_API: 28
            ANDROID_ARCH: 'x86_64'
            ANDROID_GPU: 'none'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      ANDROID_API: ${{ matrix.ANDROID_API }}
      ANDROID_ARCH: ${{ matrix.ANDROID_ARCH }}
      ANDROID_GPU: ${{ matrix.ANDROID_GPU }}
      ANDROID_TARGET: 'default'
      #ANDROID_BUILD_TOOLS_VERSION: 36.0.0
      ANDROID_BUILD_TOOLS_VERSION: 'latest'
      ANDROID_EMULATOR_NAME: 'demo'
    steps:
      - uses: skiptools/actions/setup-skip@skip-action

      - name: "Setup Environment"
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: "Launch emulator"
        timeout-minutes: 10
        run: |
          yes Y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses 2>&1 >> /dev/null

          # Install AVD files
          sdkmanager --install "system-images;android-${ANDROID_API};${ANDROID_TARGET};${ANDROID_ARCH}"
          sdkmanager --channel=3 emulator

          # Create emulator
          echo "Creating emulator: ${ANDROID_EMULATOR_NAME}"
          avdmanager create avd -f -n "${ANDROID_EMULATOR_NAME}" -d "Nexus 10" --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${ANDROID_API};${ANDROID_TARGET};${ANDROID_ARCH}" --force

          echo "Listing emulators"

          emulator -list-avds
          echo "Starting emulator"
      
          # Start emulator in background
          nohup emulator -avd ${ANDROID_EMULATOR_NAME} -no-snapshot -no-window -no-audio -no-boot-anim -no-accel -no-metrics -camera-back none -accel off -gpu ${ANDROID_GPU} &
          # Fixed quoting around "\r"
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d "\r") ]]; do sleep 1; done; input keyevent 82'

          adb devices
          echo "Emulator started"
      
      - name: "Check Emulator"
        run: |
          adb shell 'echo Hello Android!'

      - name: "Test Swift Package"
        run: |
          mkdir PackageDemo
          cd PackageDemo
          swift package init
          swift test
          skip android test

