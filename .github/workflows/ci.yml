name: universal ci
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  install-sdk:
    strategy:
      matrix:
        os: ['macos-13', 'macos-14', 'macos-15']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Launch emulator"
        run: |
          # Install AVD files
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-28;default;x86_64'
          # Create emulator
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -d "Nexus 10" -k 'system-images;android-28;default;x86_64' --force
          echo "y" | $ANDROID_HOME/emulator/emulator -list-avds
          echo "Starting emulator"
          # Start emulator in background
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-snapshot -no-window -no-audio -no-boot-anim -no-accel &
          # Fixed quoting around "\r"
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d "\r") ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"

      - name: "Check emulator"
        run: |
          find ${ANDROID_HOME} -name sdkmanager
          find ${ANDROID_HOME} -name emulator
          find ${ANDROID_HOME} -name avdmanager
          ${ANDROID_HOME}/tools/bin/sdkmanager "tools"
          ${ANDROID_HOME}/tools/bin/sdkmanager "platform-tools"
          ${ANDROID_HOME}/tools/bin/sdkmanager "platforms;android-28"
          ${ANDROID_HOME}/tools/bin/sdkmanager "system-images;android-28;default;x86"
          ${ANDROID_HOME}/tools/bin/sdkmanager --update
          ${ANDROID_HOME}/tools/bin/sdkmanager --licenses
          ${ANDROID_HOME}/tools/bin/avdmanager create avd -n test -k "system-images;android-28;default;x86" -c 200M -f
          ${ANDROID_HOME}/emulator/emulator -avd test -no-audio -no-accel -no-snapshot -no-window -camera-back none -camera-front none
      - name: "Install SDK"
        run: |
          HOST_TOOLCHAIN_URL="https://download.swift.org/development/xcode/swift-DEVELOPMENT-SNAPSHOT-2025-08-08-a/swift-DEVELOPMENT-SNAPSHOT-2025-08-08-a-osx.pkg"
          curl -fsSL --retry 8 --retry-connrefused ${HOST_TOOLCHAIN_URL} --output swift.pkg
          /usr/sbin/installer -pkg swift.pkg -target CurrentUserHomeDirectory
          SWIFT_PATH=${HOME}/Library/Developer/Toolchains/$(basename ${HOST_TOOLCHAIN_URL} "-osx.pkg").xctoolchain/usr
          ${SWIFT_PATH}/bin/swift --version

          mkdir PackageDemo
          cd PackageDemo
          ${SWIFT_PATH}/bin/swift package init
          ${SWIFT_PATH}/bin/swift test

          ${SWIFT_PATH}/bin/swift sdk install https://download.swift.org/swift-6.2-branch/static-sdk/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-08-09-a/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-08-09-a_static-linux-0.0.1.artifactbundle.tar.gz --checksum 157dbf0cc8465f72c00a765c5f99e24d06c06b71cbe59136421163aa2c0fa7eb



