name: sdk-install-demo ci
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  install-sdk:
    strategy:
      matrix:
        include:
          - name: 'macOS 26'
            os: 'macos-26'
            ANDROID_API: 28
            ANDROID_ARCH: 'arm64-v8a'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'macOS 15'
            os: 'macos-15'
            ANDROID_API: 28
            ANDROID_ARCH: 'arm64-v8a'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'macOS 14'
            os: 'macos-14'
            ANDROID_API: 28
            ANDROID_ARCH: 'arm64-v8a'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'macOS 13'
            os: 'macos-13'
            ANDROID_API: 28
            ANDROID_ARCH: 'x86_64'
            ANDROID_GPU: 'swiftshader_indirect'
          - name: 'Ubuntu Latest'
            os: 'ubuntu-latest'
            ANDROID_API: 28
            ANDROID_ARCH: 'x86_64'
            ANDROID_GPU: 'none'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      ANDROID_API: ${{ matrix.ANDROID_API }}
      ANDROID_ARCH: ${{ matrix.ANDROID_ARCH }}
      ANDROID_GPU: ${{ matrix.ANDROID_GPU }}
      ANDROID_TARGET: 'default'
      #ANDROID_BUILD_TOOLS_VERSION: 36.0.0
      ANDROID_BUILD_TOOLS_VERSION: 'latest'
    steps:
      - name: "Setup Environment"
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

      - name: "Launch emulator"
        timeout-minutes: 10
        run: |
          yes Y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

          # Install AVD files
          yes Y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-${ANDROID_API};${ANDROID_TARGET};${ANDROID_ARCH}"
          yes Y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --channel=3 emulator
          # Create emulator
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -f -n test -d "Nexus 10" --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${ANDROID_API};${ANDROID_TARGET};${ANDROID_ARCH}" --force
          yes Y | $ANDROID_HOME/emulator/emulator -list-avds
          echo "Starting emulator"
      
          # Start emulator in background
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-snapshot -no-window -no-audio -no-boot-anim -no-accel -no-metrics -camera-back none -accel off -gpu ${ANDROID_GPU} &
          # Fixed quoting around "\r"
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d "\r") ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
      
      - name: "Check Emulator"
        run: |
          $ANDROID_HOME/platform-tools/adb shell 'echo Hello Android!'
      
      - name: "Install Skip (macOS)"
        if: ${{ startsWith(matrix.os, 'macos-') }}
        run: |
          brew install skiptools/skip/skip
          skip android sdk install

      - name: Install Skip (Ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        run: |
          mkdir -p ~/bin/skiptools
          cd ~/bin/skiptools
          curl -fsSLO https://github.com/skiptools/skip/releases/latest/download/skip-linux.zip
          unzip skip-linux.zip
          echo "PATH=${PWD}/skip.artifactbundle/$(uname -m)-swift-linux-musl:${PATH}" >> $GITHUB_ENV
          cd -

      - name: "Test Swift Package"
        run: |
          mkdir PackageDemo
          cd PackageDemo
          swift package init
          swift test
          skip android test

